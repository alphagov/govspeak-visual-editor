name: CI

on:
  workflow_dispatch: {}
  push:
    branches:
      - main
    paths-ignore:
      - ".git**"
  pull_request:

jobs:
  codeql-sast:
    name: CodeQL SAST scan
    uses: alphagov/govuk-infrastructure/.github/workflows/codeql-analysis.yml@main
    permissions:
      security-events: write

  dependency-review:
    name: Dependency Review scan
    uses: alphagov/govuk-infrastructure/.github/workflows/dependency-review.yml@main

  lint:
    uses: ./.github/workflows/lint.yml

  run-playwright-tests:
    uses: ./.github/workflows/playwright.yml

  prettier:
    uses: ./.github/workflows/prettier.yml

  vitest:
    uses: ./.github/workflows/vitest.yml

  release:
    needs: vitest
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm
          registry-url: "https://registry.npmjs.org"
      - run: npm ci
      - run: npm run build
      - name: Establish version
        run: |
          LOCAL=$(node -p "require('./package.json').version")
          echo "::set-output name=local::${LOCAL}"
          echo "::set-output name=remote::$(npm view govspeak-visual-editor version)"
          if git ls-remote --tags --exit-code origin ${LOCAL}; then
            echo "::set-output name=tagged::yes"
          fi
        id: version
      - name: Tag version
        if: ${{ steps.version.outputs.tagged != 'yes' }}
        run: git tag ${{ steps.version.outputs.local }} && git push --tags
      - name: Release to NPM
        if: ${{ steps.version.outputs.local != steps.version.outputs.remote }}
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.ALPHAGOV_NPM_AUTOMATION_TOKEN }}
